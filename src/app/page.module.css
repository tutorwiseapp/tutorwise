.mainContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  padding-top: 100px;
}

.logo {
  font-family: var(--font-secondary);
  font-size: 64px;
  font-weight: 600;
  letter-spacing: -3px;
  color: var(--color-primary);
  text-align: center;
  margin-bottom: var(--space-3);
}

.tagline {
  max-width: 600px;
  font-size: var(--font-size-base);
  color: var(--color-text-secondary);
  text-align: center;
  font-weight: var(--font-weight-regular);
  line-height: 1.5;
  font-family: var(--font-primary);
  margin: 0 auto var(--space-2) auto;
}

.inputContainer {
  width: 100%;
  max-width: 800px;
  height: 56px;
  border: 1px solid var(--color-border);
  border-radius: 28px;
  background-color: var(--color-bg-card);
  display: flex;
  overflow: hidden;
  transition: all 0.2s ease;
  box-shadow: var(--shadow-sm);
  margin: 0 auto var(--space-4) auto;
}
.inputContainer:hover,
.inputContainer:focus-within {
  box-shadow: var(--shadow-md);
  border-color: transparent;
}
.inputContainer.valid {
  border-color: var(--color-success);
}
.inputContainer.invalid {
  border-color: var(--color-error);
}


.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}

.urlWrapper { flex: 3; }
.agentWrapper { flex: 1; }

.urlInput, .agentInput {
  width: 100%;
  height: 100%;
  border: none;
  background-color: transparent;
  font-size: var(--font-size-base);
  outline: none;
  font-weight: var(--font-weight-regular);
  font-family: var(--font-primary);
}
.urlInput {
  padding: 0 68px 0 36px;
}
.agentInput {
  text-align: left;
  padding: 0 56px 0 16px;
}
.agentInput::placeholder {
  color: var(--color-text-placeholder);
}
.agentInput:disabled {
  background-color: var(--color-bg-page);
  cursor: not-allowed;
  color: var(--color-text-secondary);
}

.inputSeparator {
  width: 1px;
  height: 24px;
  background-color: var(--color-border);
  margin: auto 0;
}

.clearBtn {
  position: absolute;
  right: 40px;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  border: none;
  background: none;
  cursor: pointer;
  color: var(--color-text-placeholder);
  font-size: 24px;
  font-weight: 300;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s ease, color 0.2s ease;
  line-height: 1;
}
.clearBtn:hover {
  background-color: var(--color-bg-page);
  color: var(--color-text-primary);
}

.validationIndicator {
  position: absolute;
  right: 24px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  display: none;
  align-items: center;
  justify-content: center;
}

.agentWrapper .validationIndicator {
  right: 24px;
}

.validationIndicator.valid, .validationIndicator.invalid {
  display: flex;
}
.validationIndicator.valid::before {
  content: '';
  width: 12px;
  height: 6px;
  border-left: 2px solid var(--color-success);
  border-bottom: 2px solid var(--color-success);
  transform: rotate(-45deg);
  margin-top: -7px;
}
.validationIndicator.invalid::before {
  content: 'Ã—';
  font-size: 20px;
  color: var(--color-error);
  line-height: 1;
}

.buttonContainer {
  display: flex;
  gap: var(--space-2);
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;
  max-width: 720px;
}

.buttonContainer > button {
  flex: 1;
  min-width: 176px;
}

.newOutputContainer {
  width: 100%;
  max-width: 800px;
  margin: var(--space-6) auto 0;
}

.outputGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--space-3);
  justify-items: center;
}

.outputCard {
  width: 100%;
  max-width: 350px;
  height: auto;
  aspect-ratio: 1 / 1;
  padding: var(--space-2);
  text-align: center;
  cursor: pointer;
  display: flex;
  flex-direction: column;
}

@media (min-width: 768px) {
  .outputGrid {
    grid-template-columns: repeat(2, 1fr);
    max-width: 600px; 
    margin-left: auto;
    margin-right: auto;
  }
  
  .outputGrid > *:nth-child(3) {
    grid-column: 1 / -1;
    justify-self: center;
    width: 50%;
    max-width: none;
  }

  .outputCard {
    max-width: none;
  }
}

@media (min-width: 992px) {
  .outputGrid {
    grid-template-columns: repeat(3, 1fr);
    max-width: 800px;
  }
  
  .outputGrid > *:nth-child(3) {
    grid-column: auto;
    width: 100%;
  }
}

.outputCard h4 {
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin-bottom: var(--space-2);
  transition: color 0.2s ease;
  flex-shrink: 0;
}
.outputCard:hover h4 { color: var(--color-primary); }

/* CORRECTED: The inner box now starts with a light grey background */
.outputBox {
  background-color: var(--color-bg-box); /* This is your light grey color */
  border-radius: var(--border-radius-sm);
  padding: var(--space-2);
  word-break: break-all;
  text-align: center;
  transition: background-color 0.2s ease, color 0.2s ease;
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-xs);
  font-family: var(--font-primary);
  overflow: hidden;
  color: var(--color-text-secondary);
}

/* CORRECTED: The inner box changes to green on hover of the parent card */
.outputCard:hover .outputBox {
  background-color: var(--color-primary-light); /* This is your light green color */
  color: var(--color-text-primary);
}
.outputBox pre {
  white-space: pre-wrap;
  text-align: left;
  font-family: monospace;
  font-size: var(--font-size-xs);
  color: var(--color-text-primary);
}
.outputBox code { font-family: inherit; }

.messageContainer {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  width: auto;
  min-width: 300px;
  max-width: 90%;
}

.tempIdMessageWrapper {
  width: 100%;
  max-width: 800px;
  margin: var(--space-4) auto 0;
}

.claimLink {
  font-weight: var(--font-weight-medium);
  text-decoration: underline;
  color: inherit;
}
.claimLink:hover { text-decoration: none; }

.outputInstructions {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  line-height: 1.6;
  margin-top: var(--space-4);
  text-align: left;
  max-width: 800px;
  padding: 0;
  background-color: transparent;
  border: none;
}
.outputInstructions p { margin-bottom: var(--space-1); }
.outputInstructions p:last-child { margin-bottom: 0; }
.outputInstructions strong {
  color: var(--color-text-primary);
  font-weight: var(--font-weight-medium);
}

/* This block is from your working code and is preserved */
@media (max-width: 768px) {
  .mainContent {
    padding-top: 150px; 
  }
  .inputContainer {
    flex-direction: column;
    height: auto;
    padding: 0;
    border-radius: var(--border-radius-md);
  }
  .inputSeparator { display: none; }
  .urlInput {
    border-bottom: 1px solid var(--color-border);
    padding: 16px;
    height: 56px;
  }
  .agentInput {
    text-align: left;
    padding: 16px;
    height: 56px;
  }
  
  .validationIndicator, .clearBtn {
    display: none;
  }
  
  .buttonContainer {
    flex-direction: column;
    gap: var(--space-2);
    align-items: stretch;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
  }
  .buttonContainer > button {
    width: 100%;
    flex-basis: 48px;
  }
}