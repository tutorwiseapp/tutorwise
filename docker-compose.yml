version: '3.8'

services:
  neo4j:
    image: neo4j:5.15-community
    container_name: tutorwise-neo4j
    ports:
      - "7474:7474"  # HTTP (Neo4j Browser)
      - "7687:7687"  # Bolt (Driver connections)
    environment:
      # Authentication - Load from .env file (see .env.example)
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password123}

      # Plugins
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*

      # Memory Settings (adjust based on your system)
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G

      # Performance
      - NEO4J_dbms_connector_bolt_thread__pool__max__size=400

      # Security
      - NEO4J_dbms_security_auth__minimum__password__length=8
      - NEO4J_dbms_logs_debug_level=INFO

      # APOC Configuration
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - tutorwise-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD:-password123}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: tutorwise-redis
    ports:
      - "6379:6379"
    # Use password from environment variable
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-tutorwise123}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_data:/data
    networks:
      - tutorwise-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  tutorwise-api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: tutorwise-api
    ports:
      - "8000:8000"
    environment:
      # Database connections (use service names as hostnames)
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password123}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-tutorwise123}@redis:6379
      - ENVIRONMENT=development
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
    networks:
      - tutorwise-network
    restart: unless-stopped

  tutorwise-web:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: tutorwise-web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - tutorwise-api
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - tutorwise-network
    restart: unless-stopped

networks:
  tutorwise-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_plugins:
  neo4j_import:
  redis_data: