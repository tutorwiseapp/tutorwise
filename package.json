{
  "name": "tutorwise-workspace",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*",
    "packages/shared/*",
    "cas/packages/*"
  ],
  "scripts": {
    "dev": "npm run dev:all",
    "dev:all": "concurrently \"npm run dev:web\" \"npm run dev:api\"",
    "dev:web": "npm run dev --workspace=@tutorwise/web",
    "dev:api": "cd apps/api && source venv/bin/activate && python3 -m uvicorn app.main:app --reload",
    "build": "npm run build --workspace=@tutorwise/web",
    "test": "npm run test:all",
    "test:all": "npm run test:unit:coverage && npm run test:integration && npm run test:e2e",
    "test:unit": "jest tests/unit",
    "test:unit:quick": "npm test --workspace=@tutorwise/web -- --passWithNoTests --silent",
    "test:unit:watch": "jest tests/unit --watch",
    "test:unit:coverage": "jest tests/unit --coverage",
    "test:integration": "jest tests/integration",
    "test:backend": "cd apps/api && python3 -m pytest tests/ -v",
    "test:e2e": "playwright test --config=tools/playwright/playwright.config.ts",
    "test:e2e:ui": "playwright test --config=tools/playwright/playwright.config.ts --ui",
    "test:e2e:staging": "BASE_URL=https://tutorwise-production.up.railway.app playwright test --config=tools/playwright/playwright.config.ts",
    "test:visual": "percy exec -- playwright test --config=tools/playwright/playwright.config.ts",
    "test:watch": "concurrently \"npm run test:unit:watch\" \"npm run test:e2e:ui\"",
    "lint": "npm run lint --workspace=@tutorwise/web",
    "lint:fix": "npm run lint:fix --workspace=@tutorwise/web",
    "typecheck": "npm run typecheck --workspace=@tutorwise/web",
    "lint:backend": "cd apps/api && python3 -m ruff check app/",
    "workflow:check": "./scripts/dev-workflow.sh check",
    "workflow:test": "./scripts/dev-workflow.sh test",
    "workflow:build": "./scripts/dev-workflow.sh build",
    "workflow:deploy": "./scripts/dev-workflow.sh deploy",
    "workflow:fix-tests": "./scripts/dev-workflow.sh fix-tests",
    "workflow:clean": "./scripts/dev-workflow.sh clean",
    "workflow:full": "./scripts/dev-workflow.sh full",
    "visual-test": "./scripts/visual-test.sh",
    "visual-test:nav": "./scripts/visual-test.sh navigation",
    "visual-test:onboarding": "./scripts/visual-test.sh onboarding",
    "storybook": "npm run storybook --workspace=@tutorwise/web",
    "storybook:build": "npm run storybook:build --workspace=@tutorwise/web",
    "storybook:test": "npm run storybook:test --workspace=@tutorwise/web",
    "storybook:percy": "npm run storybook:percy --workspace=@tutorwise/web",
    "cas:generate": "node cas/packages/core/src/context/generate-context.js",
    "cas:update": "npm run cas:generate",
    "cas:setup": "node cas/packages/core/src/context/setup-context-engineering.js",
    "cas:apps": "bash cas/packages/sadd/bin/sadd-apps",
    "sadd:apps": "bash cas/packages/sadd/bin/sadd-apps",
    "tools:migrate": "node cas/packages/core/src/utils/migrate-to-monorepo.js",
    "tools:update-imports": "node cas/packages/core/src/utils/update-imports.js",
    "context:generate": "npm run cas:generate",
    "context:update": "npm run cas:update",
    "context:setup": "npm run cas:setup",
    "sync:confluence": "node tools/scripts/integrations/confluence-sync.js",
    "sync:google-docs": "node tools/scripts/integrations/sync-google-docs.js sync-docs",
    "sync:calendar": "node tools/scripts/integrations/sync-google-docs.js poll-calendar",
    "sync:calendar-to-jira": "node tools/scripts/integrations/sync-calendar-to-jira.js",
    "sync:calendar-to-jira:continuous": "node tools/scripts/integrations/sync-calendar-to-jira.js continuous",
    "sync:all": "npm run sync:confluence && npm run sync:google-docs",
    "test:confluence": "node tools/scripts/integrations/confluence-sync.js test",
    "test:google": "node tools/scripts/integrations/sync-google-docs.js test",
    "test:calendar": "node tools/scripts/integrations/sync-google-docs.js test-calendar",
    "test:calendar-to-jira": "node tools/scripts/integrations/sync-calendar-to-jira.js test",
    "test:jira-fields": "node tools/scripts/testing/test-jira-fields.js",
    "jira:poll": "node tools/scripts/automation/jira-task-executor.js poll",
    "jira:poll:continuous": "node tools/scripts/automation/jira-task-executor.js continuous",
    "jira:test-tasks": "node tools/scripts/automation/jira-task-executor.js test",
    "calendar:poll": "node tools/scripts/automation/calendar-task-executor.js poll",
    "calendar:poll:continuous": "node tools/scripts/automation/calendar-task-executor.js continuous",
    "calendar:test-tasks": "node tools/scripts/automation/calendar-task-executor.js test",
    "gemini": "python3 .ai/scripts/gemini-cli-simple.py --interactive",
    "gemini:chat": "python3 .ai/scripts/gemini-cli-simple.py chat",
    "gemini:help": "python3 .ai/scripts/gemini-cli-simple.py --help",
    "gemini:advanced": "python3 .ai/scripts/gemini-cli.py --help",
    "gemini:models": "python3 .ai/scripts/check-gemini-models.py",
    "ai:gemini": "npm run cas:generate && python3 .ai/scripts/gemini-cli-simple.py --interactive",
    "audit:project": "tools/scripts/monitoring/project-audit.sh adhoc",
    "audit:daily": "tools/scripts/monitoring/project-audit.sh daily",
    "audit:weekly": "tools/scripts/monitoring/project-audit.sh weekly",
    "audit:validate": "tools/scripts/monitoring/project-audit.sh validate",
    "audit:compare": "tools/scripts/monitoring/project-audit.sh compare",
    "cas-startup": "bash tools/scripts/setup/cas-startup.sh",
    "cas-startup:status": "bash tools/scripts/setup/cas-startup.sh status",
    "cas-startup:start-all": "bash tools/scripts/setup/cas-startup.sh start-all",
    "cas-startup:stop-all": "bash tools/scripts/setup/cas-startup.sh stop-all",
    "cas-startup:restart-all": "bash tools/scripts/setup/cas-startup.sh restart-all",
    "claude:login": "bash tools/scripts/setup/claude-code-login.sh",
    "setup-aliases": "bash tools/scripts/setup/setup-aliases.sh",
    "setup:direnv": "bash tools/scripts/setup/setup-direnv.sh",
    "setup:cas": "bash tools/scripts/setup/install-cas-global.sh",
    "deploy:railway": "bash tools/scripts/deployment/railway-deploy.sh",
    "deploy:vercel": "bash tools/scripts/deployment/vercel-deploy.sh",
    "deploy:vercel:prod": "bash tools/scripts/deployment/vercel-deploy.sh prod",
    "prepare": "husky"
  },
  "dependencies": {
    "@google/genai": "^1.22.0",
    "@jest/globals": "^30.2.0",
    "@supabase/supabase-js": "^2.75.0",
    "axios": "^1.6.0",
    "dotenv": "^16.6.1",
    "googleapis": "^130.0.0",
    "marked": "^16.3.0",
    "neo4j-driver": "^5.28.2",
    "nodemailer": "^7.0.7",
    "pg": "^8.16.3",
    "puppeteer": "^24.23.0",
    "zod": "^4.1.12"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@percy/cli": "^1.31.2",
    "@percy/playwright": "^1.0.9",
    "@percy/storybook": "^9.1.0",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/lodash": "^4.17.20",
    "concurrently": "^9.2.1",
    "husky": "^9.1.7",
    "jest-environment-jsdom": "^30.2.0",
    "ts-jest": "^29.4.5",
    "tsconfig-paths-jest": "^0.0.1",
    "wait-on": "^9.0.1"
  }
}
