{
  "permissions": {
    "allow": [
      "Bash(npm test)",
      "Bash(python3 -m pytest tests/ -v)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:backend:*)",
      "Bash(npm run test:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(python3 -m pytest tests/integration/test_health_endpoint.py::TestDevRoutes::test_test_neo4j_write_success -v)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(npx playwright install:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(git push:*)",
      "Bash(curl:*)",
      "Bash(npx tsc:*)",
      "Bash(awk:*)",
      "Bash(eslint:*)",
      "Read(///**)",
      "Bash(npm run test:e2e:*)",
      "Bash(npx playwright test:*)",
      "Bash(npm run sync:jira:*)",
      "Bash(npm run sync:github:*)",
      "Bash(npm run sync:context:*)",
      "Bash(git check-ignore:*)",
      "Bash(brew install:*)",
      "Bash(export:*)",
      "Bash(cat:*)",
      "Bash(npm view:*)",
      "Bash(npm update:*)",
      "Bash(rg:*)",
      "Bash(tree:*)",
      "Bash(npx jest:*)",
      "Bash(grep:*)",
      "Bash(xargs dirname:*)",
      "Bash(test:*)",
      "Bash(npm run test:confluence:*)",
      "Bash(npm run test:google:*)",
      "Bash(npm run context:setup:*)",
      "Bash(npm run jira:test-tasks:*)",
      "Bash(npm run jira:poll:*)",
      "Bash(npm run calendar:test-tasks:*)",
      "WebSearch",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:djinoz.medium.com)",
      "WebFetch(domain:uxcam.com)",
      "WebFetch(domain:userpilot.com)",
      "Bash(npx supabase:*)",
      "Bash(psql:*)",
      "Bash(/dev/null)",
      "Bash(if [ -n \"$GOOGLE_AI_API_KEY\" ])",
      "Bash(then echo \"✅ GOOGLE_AI_API_KEY is set\")",
      "Bash(else echo \"❌ GOOGLE_AI_API_KEY not found in environment\")",
      "Bash(fi)",
      "Bash(source:*)",
      "Bash(echo \"✅ Gemini API Key loaded: $GOOGLE_AI_API_KEY:0:10...\")",
      "Bash(npm run:*)",
      "Bash(python3:*)",
      "Bash(timeout:*)",
      "Bash(pip install:*)",
      "Bash(pip3 install:*)",
      "Bash(npx husky init:*)",
      "Bash(chmod:*)",
      "Bash(echo:*)",
      "Bash(echo \"JIRA_EMAIL: $JIRA_EMAIL\")",
      "Bash(./backup-credentials.sh)",
      "Bash(git reset:*)",
      "Bash(git restore:*)",
      "Bash(./scripts/visual-test.sh:*)",
      "Bash(npx vercel:*)",
      "WebFetch(domain:vercel.com)",
      "Bash(railway --version)",
      "Bash(railway help:*)",
      "Bash(env)",
      "Bash(./health-check.sh:*)",
      "Bash(find:*)",
      "Bash(tools/scripts/neo4j-test-connection.sh:*)",
      "Bash(tools/scripts/redis-test-connection.sh:*)",
      "Bash(tools/scripts/terraform-test-connection.sh:*)",
      "Bash(ping:*)",
      "Bash(lsof:*)",
      "Bash(ps:*)",
      "Bash(kill:*)",
      "Bash(git rm:*)",
      "Bash(tools/scripts/railway-deploy.sh:*)",
      "WebFetch(domain:tutorwise-3vfprxkvt-vinite.vercel.app)",
      "Read(//Users/michaelquan/.config/**)",
      "Read(//Users/michaelquan/**)",
      "Bash(./tools/scripts/project-audit.sh:*)",
      "Bash(crontab:*)",
      "Bash(./tools/scripts/run-daily-audit.sh:*)",
      "Bash(git log:*)",
      "Bash(git ls-tree:*)",
      "Bash(git checkout:*)",
      "Bash(xargs kill:*)",
      "Bash(code:*)",
      "Bash(gh run view:*)",
      "Bash(npm uninstall:*)"
    ],
    "deny": [],
    "ask": []
  }
}