name: 📊 Daily Project Audit

on:
  schedule:
    # Run at 6:00 AM UTC (7:00 AM BST / 6:00 AM GMT)
    - cron: '0 6 * * *'
    # Run at 6:00 PM UTC (7:00 PM BST / 6:00 PM GMT)
    - cron: '0 18 * * *'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '22.x'

jobs:
  run-daily-audit:
    name: 📋 Generate and Email Audit Report
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 50 # Fetch recent history for git analysis

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 📝 Create .env.local from secrets
      run: |
        cat > .env.local << EOF
        RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
        RESEND_FROM_EMAIL="${{ secrets.RESEND_FROM_EMAIL }}"
        NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        EOF

    - name: 🔍 Create base audit file if needed
      run: |
        AUDIT_DATE=$(date +%Y-%m-%d)
        AUDIT_FILE="docs/project-audit/project-audit-$AUDIT_DATE.md"

        if [ ! -f "$AUDIT_FILE" ]; then
          echo "Creating base audit file for $AUDIT_DATE"
          # Find the most recent audit file to use as template
          LATEST_AUDIT=$(ls -t docs/project-audit/project-audit-*.md 2>/dev/null | head -1)
          if [ -n "$LATEST_AUDIT" ]; then
            cp "$LATEST_AUDIT" "$AUDIT_FILE"
            echo "Base audit file created from $LATEST_AUDIT"
          else
            echo "# Tutorwise Project Audit" > "$AUDIT_FILE"
            echo "" >> "$AUDIT_FILE"
            echo "## Executive Summary" >> "$AUDIT_FILE"
            echo "" >> "$AUDIT_FILE"
            echo "## Conclusion" >> "$AUDIT_FILE"
            echo "Generated audit template for $AUDIT_DATE" >> "$AUDIT_FILE"
          fi
        fi

    - name: 📊 Generate audit report
      run: |
        echo "y" | ./tools/scripts/run-daily-audit.sh
      continue-on-error: true

    - name: 📧 Check email status
      run: |
        if grep -q "Email sent successfully" logs/audit-cron.log; then
          echo "✅ Audit email sent successfully!"
          exit 0
        else
          echo "⚠️ Email may not have been sent. Check logs."
          tail -50 logs/audit-cron.log
          exit 1
        fi

    - name: 📎 Upload audit artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: audit-report-${{ github.run_number }}
        path: |
          docs/project-audit/project-audit-*.md
          docs/project-audit/project-audit-*.pdf
          logs/audit-cron.log
          tools/snapshots/snapshot-*.json
        retention-days: 30

    - name: 💬 Notify on failure
      if: failure()
      run: |
        echo "::error::Daily audit failed. Check the logs artifact for details."
