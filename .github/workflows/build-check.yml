name: Build Check

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/web/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/build-check.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/web/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  build-web:
    name: Build Web Application
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web application
        run: npm run build --workspace=@tutorwise/web
        env:
          NODE_ENV: production
      
      - name: Check for build artifacts
        run: |
          if [ ! -d "apps/web/.next" ]; then
            echo "❌ Build failed: .next directory not found"
            exit 1
          fi
          echo "✅ Build artifacts found"
      
      - name: Upload build artifacts (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: apps/web/.next
          retention-days: 1

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript type check
        run: |
          cd apps/web
          npx tsc --noEmit
        continue-on-error: true
      
      - name: Type check summary
        if: failure()
        run: echo "⚠️ Type check found errors (non-blocking)"

  lint-check:
    name: ESLint Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint --workspace=@tutorwise/web
        continue-on-error: true
      
      - name: Lint summary
        if: failure()
        run: echo "⚠️ Linting found issues (non-blocking)"

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-web, type-check, lint-check]
    if: always()
    
    steps:
      - name: Check build status
        run: |
          echo "## Build Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Web**: ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Type Check**: ${{ needs.type-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Lint Check**: ${{ needs.lint-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.build-web.result }}" != "success" ]; then
            echo "❌ Build failed! Please fix build errors before merging." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ Build passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi
