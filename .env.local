# Filename: src/.env.local

# ===================================================================
# Next.js / Vercel Configuration
# ===================================================================
# This robust setup uses the Vercel deployment URL automatically in production, but falls back to localhost for local development.
NEXT_PUBLIC_SITE_URL=${VERCEL_URL:-http://localhost:3000}

# ===================================================================
# Supabase Project Credentials (Public & Private)
# Get these from your Supabase Dashboard -> Project Settings -> API
# ===================================================================
# Public keys, safe to be exposed in the browser.
NEXT_PUBLIC_SUPABASE_URL="https://xzhdbvygrbddcevxminj.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh6aGRidnlncmJkZGNldnhtaW5qIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI1NjcyMzEsImV4cCI6MjA2ODE0MzIzMX0.bZ-vEFyqS4B68OQtCPSquvWI4iBZT_yX7BwlecKvPnk"
# The service_role key is a secret and is only used on the server. NEVER EXPOSE THIS.
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh6aGRidnlncmJkZGNldnhtaW5qIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MjU2NzIzMSwiZXhwIjoyMDY4MTQzMjMxfQ.Nkv5DhqPPknVVK-ZRTl4BMHw3_hVhR1PllWJz7lt6h8"

# ===================================================================
# Supabase Auth Secrets
# Get this from Supabase Dashboard -> Authentication -> JWT Keys
# ===================================================================
# JWT Secret for signing tokens. Currently, using the legacy JWT secret).
SUPABASE_JWT_SECRET="ywgzx/Dy7qLjTIPrlgb1AqTOQKyMLrBvsnUlEwCMpU4u8WlHu0vsTrClxRBdmQ83N2bt5n0dQru5ByZ/3puF0A=="

# ====================================================================
# Supabase Postgres Connection Strings
# Get these from your Supabase Dashboard -> Project Settings -> Database
# ====================================================================
# Pooled connection string for serverless functions (recommended).
POSTGRES_PRISMA_URL="postgres://postgres.xzhdbvygrbddcevxminj:15OkJUEENxC4FDkH@aws-0-eu-west-2.pooler.supabase.com:6543/postgres?sslmode=require&pgbouncer=true"
# Standard, non-pooled connection string.
POSTGRES_URL_NON_POOLING="postgres://postgres.xzhdbvygrbddcevxminj:15OkJUEENxC4FDkH@aws-0-eu-west-2.pooler.supabase.com:5432/postgres?sslmode=require"
# More database variables.
POSTGRES_URL="postgres://postgres.xzhdbvygrbddcevxminj:15OkJUEENxC4FDkH@aws-0-eu-west-2.pooler.supabase.com:6543/postgres?sslmode=require&supa=base-pooler.x"
POSTGRES_USER="postgres"
POSTGRES_HOST="db.xzhdbvygrbddcevxminj.supabase.co"
POSTGRES_PASSWORD="15OkJUEENxC4FDkH"
POSTGRES_DATABASE="postgres"

# ====================================================================
# Other Supabase Variables
# ====================================================================
# The Supabase publishable key that is no longer required.
# NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY="sb_publishable_MZ2na7jnXfDW4i0cefvt8A_d84db0-q"
# Add this line for local development. It tells the app its own address. Several of the server-side API routes for Stripe payments rely on this variable to construct the correct redirect URLs for when a user successfully connects their account or saves a card.
# NEXT_PUBLIC_BASE_URL="http://localhost:3000"

# ===================================================================
# Google Cloud Platform
# ===================================================================
# Google Social Login. These are required for the "Sign in with Google" feature. Must add these to the Supabase Auth Provider settings AND here.
GOOGLE_CLIENT_ID="98802805978-e6hh444k8sv8cj4gb5f82ot561krkn64.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="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"

# ===================================================================
# Stripe Payments Credentials
# Get these from your Stripe Dashboard -> Developers -> API Keys
# ===================================================================
# Stripe Sandbox: Public key for the Stripe.js client on the frontend.
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_51RlyHJFZfKZev5UN4Dtz6x6VuHg6u7OPJ9N9aKGl2KJrmqqRRffj3bcTaWwCQ2XVEAszRgW0o0nDHVBFom7Jalpb00rVI0WvoC"
# Stripe Sandbox: # Secret key for all backend Stripe operations. NEVER EXPOSE THIS.
STRIPE_SECRET_KEY="sk_test_51RlyHJFZfKZev5UNdrlNwZJaxhPEyk2bovlxR080JAknP2G6S8TLgjC8iuqAwQ99hLOikikuzDZ6XPySlTgkjR8j000QNdNIIY"

# Stripe Production: Public key for the Stripe.js client on the frontend.
# NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="tbc"
# Stripe Production: Secret key for server-side Stripe API calls.
# STRIPE_SECRET_KEY="tbc"
